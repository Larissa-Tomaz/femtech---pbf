# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import auth_pb2 as auth__pb2
import consentManager_pb2 as consentManager__pb2
import data_pb2 as data__pb2

GRPC_GENERATED_VERSION = '1.66.2'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in gateways_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class GatewaysStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RegisterUser = channel.unary_unary(
                '/pbfProto.Gateways/RegisterUser',
                request_serializer=auth__pb2.UserRegistrationRequest.SerializeToString,
                response_deserializer=auth__pb2.UserRegistrationResponse.FromString,
                _registered_method=True)
        self.AuthenticateUser = channel.unary_unary(
                '/pbfProto.Gateways/AuthenticateUser',
                request_serializer=auth__pb2.UserAuthenticationRequest.SerializeToString,
                response_deserializer=auth__pb2.UserAuthenticationResponse.FromString,
                _registered_method=True)
        self.AuthorizeUserRole = channel.unary_unary(
                '/pbfProto.Gateways/AuthorizeUserRole',
                request_serializer=auth__pb2.UserRoleAuthorizationRequest.SerializeToString,
                response_deserializer=auth__pb2.UserRoleAuthorizationResponse.FromString,
                _registered_method=True)
        self.AuthorizeUserId = channel.unary_unary(
                '/pbfProto.Gateways/AuthorizeUserId',
                request_serializer=auth__pb2.UserIdAuthorizationRequest.SerializeToString,
                response_deserializer=auth__pb2.UserIdAuthorizationResponse.FromString,
                _registered_method=True)
        self.LogoutUser = channel.unary_unary(
                '/pbfProto.Gateways/LogoutUser',
                request_serializer=auth__pb2.UserLogoutRequest.SerializeToString,
                response_deserializer=auth__pb2.UserLogoutResponse.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/pbfProto.Gateways/DeleteUser',
                request_serializer=auth__pb2.UserDeleteRequest.SerializeToString,
                response_deserializer=auth__pb2.UserDeleteResponse.FromString,
                _registered_method=True)
        self.GetUserData = channel.unary_unary(
                '/pbfProto.Gateways/GetUserData',
                request_serializer=data__pb2.GetDataRequest.SerializeToString,
                response_deserializer=data__pb2.GetDataResponse.FromString,
                _registered_method=True)
        self.SubmitData = channel.unary_unary(
                '/pbfProto.Gateways/SubmitData',
                request_serializer=data__pb2.SubmitDataRequest.SerializeToString,
                response_deserializer=data__pb2.SubmitDataResponse.FromString,
                _registered_method=True)
        self.DeleteUserData = channel.unary_unary(
                '/pbfProto.Gateways/DeleteUserData',
                request_serializer=data__pb2.DeleteDataRequest.SerializeToString,
                response_deserializer=data__pb2.DeleteDataResponse.FromString,
                _registered_method=True)
        self.GetDataAccessLog = channel.unary_unary(
                '/pbfProto.Gateways/GetDataAccessLog',
                request_serializer=data__pb2.GetDataAccessLogRequest.SerializeToString,
                response_deserializer=data__pb2.GetDataAccessLogResponse.FromString,
                _registered_method=True)
        self.SetConsent = channel.unary_unary(
                '/pbfProto.Gateways/SetConsent',
                request_serializer=consentManager__pb2.SetConsentRequest.SerializeToString,
                response_deserializer=consentManager__pb2.SetConsentResponse.FromString,
                _registered_method=True)
        self.GetConsentHistory = channel.unary_unary(
                '/pbfProto.Gateways/GetConsentHistory',
                request_serializer=consentManager__pb2.GetConsentHistoryRequest.SerializeToString,
                response_deserializer=consentManager__pb2.GetConsentHistoryResponse.FromString,
                _registered_method=True)
        self.GetConsent = channel.unary_unary(
                '/pbfProto.Gateways/GetConsent',
                request_serializer=consentManager__pb2.GetConsentRequest.SerializeToString,
                response_deserializer=consentManager__pb2.GetConsentResponse.FromString,
                _registered_method=True)
        self.GetConsentedDataTypes = channel.unary_unary(
                '/pbfProto.Gateways/GetConsentedDataTypes',
                request_serializer=consentManager__pb2.GetAuthorizedDataTypesRequest.SerializeToString,
                response_deserializer=consentManager__pb2.GetAuthorizedDataTypesResponse.FromString,
                _registered_method=True)


class GatewaysServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RegisterUser(self, request, context):
        """Registry Service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthenticateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthorizeUserRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthorizeUserId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogoutUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserData(self, request, context):
        """Data Service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUserData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataAccessLog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetConsent(self, request, context):
        """Consent Manager Service
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsentHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConsentedDataTypes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GatewaysServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RegisterUser': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterUser,
                    request_deserializer=auth__pb2.UserRegistrationRequest.FromString,
                    response_serializer=auth__pb2.UserRegistrationResponse.SerializeToString,
            ),
            'AuthenticateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateUser,
                    request_deserializer=auth__pb2.UserAuthenticationRequest.FromString,
                    response_serializer=auth__pb2.UserAuthenticationResponse.SerializeToString,
            ),
            'AuthorizeUserRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizeUserRole,
                    request_deserializer=auth__pb2.UserRoleAuthorizationRequest.FromString,
                    response_serializer=auth__pb2.UserRoleAuthorizationResponse.SerializeToString,
            ),
            'AuthorizeUserId': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthorizeUserId,
                    request_deserializer=auth__pb2.UserIdAuthorizationRequest.FromString,
                    response_serializer=auth__pb2.UserIdAuthorizationResponse.SerializeToString,
            ),
            'LogoutUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LogoutUser,
                    request_deserializer=auth__pb2.UserLogoutRequest.FromString,
                    response_serializer=auth__pb2.UserLogoutResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=auth__pb2.UserDeleteRequest.FromString,
                    response_serializer=auth__pb2.UserDeleteResponse.SerializeToString,
            ),
            'GetUserData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserData,
                    request_deserializer=data__pb2.GetDataRequest.FromString,
                    response_serializer=data__pb2.GetDataResponse.SerializeToString,
            ),
            'SubmitData': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitData,
                    request_deserializer=data__pb2.SubmitDataRequest.FromString,
                    response_serializer=data__pb2.SubmitDataResponse.SerializeToString,
            ),
            'DeleteUserData': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUserData,
                    request_deserializer=data__pb2.DeleteDataRequest.FromString,
                    response_serializer=data__pb2.DeleteDataResponse.SerializeToString,
            ),
            'GetDataAccessLog': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataAccessLog,
                    request_deserializer=data__pb2.GetDataAccessLogRequest.FromString,
                    response_serializer=data__pb2.GetDataAccessLogResponse.SerializeToString,
            ),
            'SetConsent': grpc.unary_unary_rpc_method_handler(
                    servicer.SetConsent,
                    request_deserializer=consentManager__pb2.SetConsentRequest.FromString,
                    response_serializer=consentManager__pb2.SetConsentResponse.SerializeToString,
            ),
            'GetConsentHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsentHistory,
                    request_deserializer=consentManager__pb2.GetConsentHistoryRequest.FromString,
                    response_serializer=consentManager__pb2.GetConsentHistoryResponse.SerializeToString,
            ),
            'GetConsent': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsent,
                    request_deserializer=consentManager__pb2.GetConsentRequest.FromString,
                    response_serializer=consentManager__pb2.GetConsentResponse.SerializeToString,
            ),
            'GetConsentedDataTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConsentedDataTypes,
                    request_deserializer=consentManager__pb2.GetAuthorizedDataTypesRequest.FromString,
                    response_serializer=consentManager__pb2.GetAuthorizedDataTypesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pbfProto.Gateways', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('pbfProto.Gateways', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Gateways(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RegisterUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/RegisterUser',
            auth__pb2.UserRegistrationRequest.SerializeToString,
            auth__pb2.UserRegistrationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthenticateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/AuthenticateUser',
            auth__pb2.UserAuthenticationRequest.SerializeToString,
            auth__pb2.UserAuthenticationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthorizeUserRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/AuthorizeUserRole',
            auth__pb2.UserRoleAuthorizationRequest.SerializeToString,
            auth__pb2.UserRoleAuthorizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthorizeUserId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/AuthorizeUserId',
            auth__pb2.UserIdAuthorizationRequest.SerializeToString,
            auth__pb2.UserIdAuthorizationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LogoutUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/LogoutUser',
            auth__pb2.UserLogoutRequest.SerializeToString,
            auth__pb2.UserLogoutResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/DeleteUser',
            auth__pb2.UserDeleteRequest.SerializeToString,
            auth__pb2.UserDeleteResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/GetUserData',
            data__pb2.GetDataRequest.SerializeToString,
            data__pb2.GetDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SubmitData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/SubmitData',
            data__pb2.SubmitDataRequest.SerializeToString,
            data__pb2.SubmitDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUserData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/DeleteUserData',
            data__pb2.DeleteDataRequest.SerializeToString,
            data__pb2.DeleteDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDataAccessLog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/GetDataAccessLog',
            data__pb2.GetDataAccessLogRequest.SerializeToString,
            data__pb2.GetDataAccessLogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetConsent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/SetConsent',
            consentManager__pb2.SetConsentRequest.SerializeToString,
            consentManager__pb2.SetConsentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConsentHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/GetConsentHistory',
            consentManager__pb2.GetConsentHistoryRequest.SerializeToString,
            consentManager__pb2.GetConsentHistoryResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConsent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/GetConsent',
            consentManager__pb2.GetConsentRequest.SerializeToString,
            consentManager__pb2.GetConsentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConsentedDataTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/pbfProto.Gateways/GetConsentedDataTypes',
            consentManager__pb2.GetAuthorizedDataTypesRequest.SerializeToString,
            consentManager__pb2.GetAuthorizedDataTypesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
